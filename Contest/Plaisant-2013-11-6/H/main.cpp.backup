#include <map>
#include <set>
#include <list>
#include <cmath>
#include <queue>
#include <stack>
#include <bitset>
#include <vector>
#include <cstdio>
#include <string>
#include <sstream>
#include <cstdlib>
#include <cstring>
#include <iostream>
#include <algorithm>
using namespace std;
#define PB push_back
#define MP make_pair
#define SZ(v) ((int)(v).size())
#define abs(x) ((x) > 0 ? (x) : -(x))
#define FOREACH(e,x) for(__typeof(x.begin()) e=x.begin();e!=x.end();++e)
typedef long long LL;

const int maxn = 1000 + 50;
int n, a, b, ll[maxn], rr[maxn], mark[maxn], res[maxn];

int main() {
	while (~scanf("%d %d", &a, &b)) {
		scanf("%d", &n);
		int li = 0;
		int ri = 0;
		for (int i = 1, x, y; i <= n; i++) {
			scanf("%d %d", &x, &y);
			if (y == 0) ll[li++] = x;
			else rr[ri++] = x;
		}

		memset(mark, 0, sizeof(mark));
		n >>= 1;
		int result = 1;
		for (int i = 0; i < n; i++) {
			int lYes = -1;
			int rYes = -1;
			for (int j = 0; j < n && ll[j] < rr[i]; j++) 
			if (!mark[j]) {
				if (lYes == -1 && rr[i] - ll[j] >= a) {
					lYes = j;
				}
				if (rYes == -1 && rr[i] - ll[j] <= b) {
					rYes = j;
				}
			}
			if (rYes != -1) {
				res[i] = rYes;
				mark[rYes] = 1;
			} else if (lYes != -1) {
				res[i] = lYes;
				mark[lYes] = 1;
			} else {
				result = 0;
				break;
			}
		}

		if (result == 0) {
			puts("Liar");
		} else {
			puts("No reason");
			for (int i = 0; i < n; i++)
				printf("%d %d\n", ll[res[i]], rr[i]);
		}

	}
	return 0;
}
